#!/bin/sh
# SPDX-License-Identifier: CC0-1.0

if [ "$CC" = "" ]; then CC=gcc; fi
if [ "$CFLAGS" = "" ]; then CFLAGS=-O3; fi
src="$(echo -n "$(dirname $(realpath $0))" | sed "s/[\$ :]/\$&/g")"

compression_src="lz4 lzcommon inflate zstd zstd_fse zstd_literals zstd_probe_literals zstd_sequences"

cat >build.ninja <<END
ninja_required_version = 1.3
cflags = -Wall $CFLAGS -iquote $src/include
flags = -c
rule cc
    description = CC \$in >\$out
    depfile = \$out.d
    deps = gcc
    command = $CC -MD -MF \$out.d \$cflags \$flags \$in -o \$out

rule ld
    description = LD \$in >\$out
    command = $CC \$in -o \$out

build idbtool: cc $src/idbtool.c
    flags =
build regtool: cc $src/regtool.c $src/regtool_rpn.c
    flags =
build lbpayload: cc $src/lbpayload/main.c $src/lbpayload/elf.c $src/lbpayload/layout.c
    flags =
END
for f in $compression_src; do
	echo build $f.o: cc "$src/../compression/$f.c" >>build.ninja
done

if command -v pkg-config && pkg-config --libs --cflags libusb-1.0; then
	cat >> build.ninja <<END
build usbtool: cc $src/usbtool.c
    flags = $(pkg-config --libs --cflags libusb-1.0)
default usbtool
END
else
	echo "pkg-config or libusb-1 not found, not building usbtool"
fi

echo build unpacktool.o: cc "$src/unpacktool.c" >>build.ninja
echo "    flags" = -c  -DHAVE_LZ4 -DHAVE_GZIP -DHAVE_ZSTD >>build.ninja

echo -n build unpacktool: ld unpacktool.o >>build.ninja
for f in $compression_src; do
	echo -n " $f.o" >>build.ninja
done
echo >>build.ninja

echo default idbtool regtool unpacktool lbpayload >>build.ninja
